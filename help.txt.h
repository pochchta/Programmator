/* Формат пакета       _
0 - FF                |  преамбула
1 - FF                |_ только для синхронизации
2 - N + (code << 4)
3 - data
4 - crc
*/

/* Последовательность приема
0 - ловим преамбулу
1 - устанавливаем флаг синхронизации, сбросим потом если ошибка crc или номер команды 0
2 - пишем в буфер данные с приемника
3 - для байтов № 2,3 выполняем crc8(), предварительно обнулив
4 - сравниваем вычисленную crc8 с байтом № 4
5 - если предыдущая команда выполнена и crc8 подтверждена, то вносится новая команда
6 - команды начала и конца дублируются на передатчик, команда начала перезаписывает номер команды в МК
7 - на запрос повторной передачи ПК начинает с преамбулы
*/

/* Команды
1 - чтение байта io1
2 - запись байта io1
3 - чтение байта io3
4 - запись байта io3
5 - импульс регистр
6 - запись регистр
7 - запрос повторной передачи (МК -> ПК), в поле номера - номер команды из МК, в поле данных - принятый номер + (код << 4)
8 - начало передачи, команда начала перезаписывает номер команды в МК
9 - конец передачи
10 - сброс номера ?
*/
/*
---Алгоритм
флаг_синхр                    1 если преамбула поймана
флаг_буфер_занят              1 если данные буфера готовы, но еще не отправлены в работу
флаг_в_работе                 1 если команда еще не выполнена
состояние_crc
    _0            0           считается байт № 0
    _1            1           считается байт № 1
    _OK           2           успешно проверено
    _ERR          3           ошибка


прерывание по приему{
    if (rx_n == 3) rx_n = 0; rx_pack_n++;
    if (rx_pack_n == 10) rx_pack_n = 0;
    запись в циклический буфер 3 байт
    rx_n++;
}

main{
    если (преамбула), флаг_синхр = 1; rx_n = 0; crc_state = 0;
    если (rx_pack_n != rx_pack_n_prev) crc_state = 0; rx_pack_n_prev = rx_pack_n;
    если (флаг_синхр == 1) {
        if (crc_state == 0 && rx_n > 0) crc8(первый байт); crc_state++;
        if (crc_state == 1 && rx_n > 1) crc8(второй байт); crc_state++;
        if (crc_state == 2 && rx_n > 2)
            if (crc8 == третий байт && проверка формата) crc_state = OK; копируем в code_buf
            else флаг_синхр = 0;
    }
    если (crc_state == OK) выполняем код
}


прерывание по приему{
    если (состояние_crc == ERR) флаг_синхр = 0; буфер_преамбулы = 0;
    если (флаг_буфер_занят == 0)
        если (флаг_синхр == 1)
            запись в буфер 3 байтов
            если байт последний, то флаг_буфер_занят = 1
        иначе
            если (преамбула), флаг_синхр = 1;
    иначе флаг_буфер_занят = 0; флаг_синхр = 0; буфер_преамбулы = 0;
}

main{
    если действие выполнено, то флаг_в_работе = 0
    если (флаг_в_работе == 0)
        если (состояние_crc == OK), копируем; флаг_в_работе = 1; флаг_буфер_занят = 0; состояние_crc = 0;
        
    если (флаг_в_работе == 1)
        switch по командам
    если (флаг_синхр == 1 и нужный номер байта) crc8()
}
